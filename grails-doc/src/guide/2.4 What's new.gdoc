The GPars 0.10 release introduces a lot of gradual enhancements and improvements on top of the previous 0.9 release.

Check out the "JIRA release notes":http://jira.codehaus.org/secure/ReleaseNote.jspa?projectId=12030&version=15702

h3. Project changes

{note:Title=Breaking Changes}
See http://gpars.codehaus.org/Breaking+Changes for the list of breaking changes.
{note}

* Experimental OSGi support

h3. Parallel collections

* Renamed the Parallelizer and Asynchronizer classes to more appropriate GParsPool and GParsExecutorsPool as well as their methods
* Enabled asynchronous closures inside the GParsPool.withPool() methods
* Reorganized the asynchronous closure invocation functionality
* Unified the GParsPool and GParsExecutorsPool functionality to eliminate the need to combine using the two classes
* Improved the map/reduce performance by eliminating unnecessary conversions

h4. Renaming hints
* Parallelizer -> GParsPool
* Asynchronizer -> GParsExecutorsPool
* doParallel() -> withPool()
* withParallelizer() -> withPool()
* withExistingParallelizer() -> withExistingPool()
* withAsynchronizer() -> withPool()
* withExistingAsynchronizer() -> withExistingPool()
* orchestrate() -> runForkJoin()

h3. Fork / Join

* Simplified API to define Fork/Join calculation without the need to create explicit subclasses

h3. Actors


h3. Dataflow

* A _maxForks_ flag has been added to allow Dataflow operators to internally work concurrently
* Added support for grouping operators and tasks around shared thread pools

h3. Safe

* Reimplemented to increase performance
* Added support for grouping Safe instances around shared thread pools

h3. Other

